# -*- coding: utf-8 -*-
"""istanbul.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lTh-_k-dYRtDoFSeukxR-3uYnApzqbY_

Gerekli kitüphanleri import ediyoruz.
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""Google drive ile bağlantı kurup csv dosyamızı çekiyoruz."""

from google.colab import drive
drive.mount('/content/drive')
adres = "/content/drive/MyDrive/Evfiyatlari/data.csv"
!cp "{adres}" .

"""Csv dosyamızı okuyup head() ile ilk 5 değeri ekrana yazdırıyoruz."""

EvCsv = pd.read_csv('/content/istanbul-ev-fiyat.csv')
EvCsv.head()

"""Csv dosyası hakkındaki bilgileri ekrana yazdırıyoruz."""

EvCsv.info()

"""Csv dosyanın verilerinin açıklamasını ekrana yazdırıyoruz."""

EvCsv.describe()

"""Csv dosyasının kolon isimlerini ekrana yazdırıyoruz."""

EvCsv.columns

"""Csv dosyasının verilerinin colonların birbirleri ile oranlarına göre ekrana çizdiriyoruz."""

sns.pairplot(EvCsv)

"""Ev fiyatlarını bir grafik ile görselleştiriyoruz."""

sns.distplot(EvCsv['Fiyat'])

sns.heatmap(EvCsv.corr(), annot=True)

"""Csv tablosunun kolonlarına göre X ve Y diyerek 2 farklı değişkene atıyoruz."""

X = EvCsv[['Metre Kare', 'Oda Sayısı', 'Salon Sayısı',
               'Banyo Sayısı', 'Balkon','Site içerisinde','Isıtma','Kimden','Konum','Bina Yaşı']]

y = EvCsv['Fiyat']

"""Test ve Eğitim verimizi ayarlıyoruz. 0.3 diyerek verinin %30'unun test verisi olmasını söylüyoruz. """

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)

"""LineerResression metodumuzu uyguluyoruz."""

from sklearn.linear_model import LinearRegression 

LineerReg = LinearRegression() 

LineerReg.fit(X_train,y_train)

print(LineerReg.intercept_)

"""Her kolonun aldığı kat sayıları ekrana yazdırıyoruz."""

katsayi = pd.DataFrame(LineerReg.coef_,X.columns,columns=['Katsayı'])
katsayi

"""Test verimiz için tahminde bulunduruyoruz."""

tahminler = LineerReg.predict(X_test)

"""Tahmini ve gerçek fiyatı ekrana yazdırıyoruz."""

j=0
for i in y_test:
  print("Gerçek fiyat:",i , " Tahmin edilen:",int(tahminler[j]))
  j=j+1

"""Gerçek ve tahmini fiyat arasındaki ilişkiyi grafikleştirdik."""

plt.plot(y_test,tahminler,'x',color='red')
plt.xlabel("Gerçek Fiyat")
plt.ylabel("Tahmini Fiyat");

"""Gerçek veriler ile tahmin fiyatlarının arasındaki farkları grafikleştiriyoruz."""

sns.distplot((y_test-tahminler),bins=50);

"""MAE ve RMSE değerlerini ekrana yazdırıyoruz."""

from sklearn import metrics

print('MAE:', metrics.mean_absolute_error(y_test, tahminler))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, tahminler)))